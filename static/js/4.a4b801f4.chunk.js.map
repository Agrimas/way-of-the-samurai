{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","id","name","path","className","Classes","dialog","link","to","activeClassName","dialog_active","src","avatar","alt","Message","isMy","text","message","DialogsForm","sendMessage","initialValues","textarea","validationSchema","Yup","max","required","onSubmit","values","actions","resetForm","obj","TypeError","formContainer","formTextarea","component","type","Dialogs","dialogsData","messagesData","dialogsElements","map","messagesElements","dialogs","dialogs_items","messagesContainer","messagesBody","mapStateToPropsAuth","state","isAuth","auth","compose","connect","messagesPage","Component","props"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,OAAS,wBAAwB,cAAgB,+BAA+B,kBAAoB,mCAAmC,aAAe,8BAA8B,QAAU,yBAAyB,KAAO,sBAAsB,cAAgB,+BAA+B,aAAe,gC,8FCiBtZC,EAdI,YAAuB,IAAZC,EAAW,EAAXA,GAAIC,EAAO,EAAPA,KACxBC,EAAI,mBAAeF,GACzB,OACI,qBAAKG,UAAWC,IAAQC,OAAxB,SACI,eAAC,IAAD,CAASF,UAAWC,IAAQE,KAAMC,GAAIL,EAAMM,gBAAiBJ,IAAQK,cAArE,UACI,qBACIC,IAAI,qGACJP,UAAWC,IAAQO,OAAQC,IAAI,KACnC,8BAAMX,UCGPY,EAZC,YAAwB,IAAbC,EAAY,EAAZA,KAAKC,EAAO,EAAPA,KAC5B,OAAID,EAEI,qBAAKX,UAAS,UAAKC,IAAQY,QAAb,YAAwBZ,IAAQU,MAA9C,SAAsD,+BAAOC,MAKjE,qBAAKZ,UAAWC,IAAQY,QAAxB,SAAiC,+BAAOD,O,gBCmB1CE,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAClB,OACI,cAAC,IAAD,CACIC,cAAe,CAACC,SAAU,IAC1BC,iBAAkBC,IAAW,CACzBF,SAAUE,MACLC,IAAI,IAAK,kCACTC,SAAS,cAElBC,SAAU,SAACC,EAAQC,GACfT,EAAYQ,EAAON,UACnBO,EAAQC,aAThB,SAWK,mBC3CE,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCD0C1B,IACG,eAAC,IAAD,CAAM3B,UAAWC,IAAQ2B,cAAzB,UACI,cAAC,IAAD,CAAO/B,GAAG,WAAWC,KAAK,WAAWE,UAAWC,IAAQ4B,eACxD,cAAC,IAAD,CAAc/B,KAAK,WAAWgC,UAAU,QACxC,wBAAQC,KAAK,SAAb,yBAOLC,EA9CC,YAAqD,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,aAAcnB,EAAc,EAAdA,YAC9CoB,EAAkBF,EAAYG,KAAI,SAAAlC,GAAM,OAAI,cAAC,EAAD,CAA4BJ,KAAMI,EAAOJ,KAC7BD,GAAIK,EAAOL,IADNK,EAAOL,OAGpEwC,EAAmBH,EAAaE,KAAI,SAAAvB,GAAO,OAAI,cAAC,EAAD,CAA0BD,KAAMC,EAAQA,QAC/BF,KAAME,EAAQF,MADTE,EAAQhB,OAGzE,OACI,sBAAKG,UAAWC,IAAQqC,QAAxB,UACI,qBAAKtC,UAAWC,IAAQsC,cAAxB,SACKJ,IAEL,sBAAKnC,UAAWC,IAAQuC,kBAAxB,UACI,qBAAKxC,UAAWC,IAAQwC,aAAxB,SACKJ,IAEL,cAAC,EAAD,CAAatB,YAAaA,W,sBEpB1C,SAAS2B,EAAoBC,GACzB,MAAO,CACHC,OAAQD,EAAME,KAAKD,QAIpB,I,QCIQE,sBAAQC,aAPvB,SAAyBJ,GACrB,MAAO,CACHV,YAAaU,EAAMK,aAAaf,YAChCC,aAAcS,EAAMK,aAAad,gBAIO,CAACnB,mBDJjB,SAACkC,GAQ7B,OAAOF,YAAQL,EAAqB,GAA7BK,EAPP,SAA2BG,GACvB,OAAKA,EAAMN,OAEP,cAACK,EAAD,eAAeC,IAFO,cAAC,IAAD,CAAU9C,GAAG,gBCEhC0C,CAAmEd","file":"static/js/4.a4b801f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3UnQI\",\"dialog\":\"Dialogs_dialog__2u1Qd\",\"link\":\"Dialogs_link__SLYuf\",\"avatar\":\"Dialogs_avatar__1bqSh\",\"dialog_active\":\"Dialogs_dialog_active__2LeAi\",\"messagesContainer\":\"Dialogs_messagesContainer__KhrU1\",\"messagesBody\":\"Dialogs_messagesBody__3NpZv\",\"message\":\"Dialogs_message__1-lE0\",\"isMy\":\"Dialogs_isMy__3NbDc\",\"formContainer\":\"Dialogs_formContainer__3phzJ\",\"formTextarea\":\"Dialogs_formTextarea__2rQ2H\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Classes from '../Dialogs.module.css';\r\n\r\nconst DialogItem = function ({id, name}) {\r\n    const path = `/dialogs/${id}`;\r\n    return (\r\n        <div className={Classes.dialog}>\r\n            <NavLink className={Classes.link} to={path} activeClassName={Classes.dialog_active}>\r\n                <img\r\n                    src=\"https://i.pinimg.com/736x/66/01/28/660128384113e56d2921764f9860c66e--stuttgart-medieval-castle.jpg\"\r\n                    className={Classes.avatar} alt=\"\"/>\r\n                <div>{name}</div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport Classes from '../Dialogs.module.css';\r\n\r\nconst Message = function ({isMy,text}) {\r\n    if (isMy) {\r\n        return (\r\n            <div className={`${Classes.message} ${Classes.isMy}`}><span>{text}</span></div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={Classes.message}><span>{text}</span></div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport Classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nconst Dialogs = function ({dialogsData, messagesData, sendMessage}) {\r\n    let dialogsElements = dialogsData.map(dialog => <DialogItem key={dialog.id} name={dialog.name}\r\n                                                                id={dialog.id}/>);\r\n\r\n    let messagesElements = messagesData.map(message => <Message key={message.id} text={message.message}\r\n                                                                isMy={message.isMy}/>)\r\n\r\n    return (\r\n        <div className={Classes.dialogs}>\r\n            <div className={Classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={Classes.messagesContainer}>\r\n                <div className={Classes.messagesBody}>\r\n                    {messagesElements}\r\n                </div>\r\n                <DialogsForm sendMessage={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogsForm = ({sendMessage}) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{textarea: ''}}\r\n            validationSchema={Yup.object({\r\n                textarea: Yup.string()\r\n                    .max(500, 'Must be 500 characters or less')\r\n                    .required('Required'),\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n                sendMessage(values.textarea);\r\n                actions.resetForm();\r\n            }}>\r\n            {({}) => (\r\n                <Form className={Classes.formContainer}>\r\n                    <Field id=\"textarea\" name=\"textarea\" className={Classes.formTextarea}/>\r\n                    <ErrorMessage name=\"textarea\" component=\"div\"/>\r\n                    <button type='submit'>Send</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction mapStateToPropsAuth(state) {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    function RedirectComponent(props) {\r\n        if (!props.isAuth) return <Redirect to='/login'/>\r\n        return (\r\n            <Component {...props}/>\r\n        );\r\n    }\r\n\r\n    return connect(mapStateToPropsAuth, {})(RedirectComponent);\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessage} from \"../../redux/reducers/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messagesData: state.messagesPage.messagesData,\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {sendMessage}), WithAuthRedirect)(Dialogs);"],"sourceRoot":""}